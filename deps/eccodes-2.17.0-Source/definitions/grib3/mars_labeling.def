# (C) Copyright 2005- ECMWF.
#
# This software is licensed under the terms of the Apache Licence Version 2.0
# which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
# 
# In applying this licence, ECMWF does not waive the privileges and immunities granted to it by
# virtue of its status as an intergovernmental organisation nor does it submit to any jurisdiction.
#

codetable[2] marsClass   "mars/class.table" = "od" : dump,string_type,lowercase;
codetable[2] marsType   "mars/type.table" = "an"  : dump,string_type,no_fail,lowercase;
codetable[2] marsStream "mars/stream.table" = "oper" : dump,string_type,lowercase ;
ksec1expver[4] experimentVersionNumber = "0001" : dump;

meta class g2_mars_labeling(0,marsClass,
                            marsType,
                            marsStream,
                            experimentVersionNumber,
                            typeOfProcessedData,
                            productDefinitionTemplateNumber,
                            stepType,
                            derivedForecast,
                            typeOfGeneratingProcess);

meta type g2_mars_labeling(1,marsClass,
                           marsType,
                           marsStream,
                           experimentVersionNumber,
                           typeOfProcessedData,
                           productDefinitionTemplateNumber,
                           stepType,
                           derivedForecast,
                           typeOfGeneratingProcess);

meta stream g2_mars_labeling(2,marsClass,
                             marsType,
                             marsStream,
                             experimentVersionNumber,
                             typeOfProcessedData,
                             productDefinitionTemplateNumber,
                             stepType,
                             derivedForecast,
                             typeOfGeneratingProcess);

alias ls.dataType = marsType;

alias mars.class  = class;
alias mars.type   = type;
alias mars.stream = stream;
alias mars.expver = experimentVersionNumber;

alias    mars.domain  =  globalDomain; # For now...
